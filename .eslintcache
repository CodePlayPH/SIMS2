[{"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\index.js":"1","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\reportWebVitals.js":"2","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\App.js":"3","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\CategoryContext.js":"4","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\AuthContext.js":"5","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Login.js":"6","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Register.js":"7","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\Contexts.js":"8","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\home.js":"9","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\categories.js":"10","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\ProductContext.js":"11","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\auth.js":"12","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\SizeCotext.js":"13","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\utils.js":"14","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\Products.js":"15","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\components\\drawer.js":"16","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\entries\\Entries.js":"17","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\categories\\Categories.js":"18","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\Dashboard.js":"19","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\constants.js":"20","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\sizes.js":"21","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\products.js":"22","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\counter.js":"23","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\graphs.js":"24","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\AddProd.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":739,"mtime":1607773066805,"results":"29","hashOfConfig":"27"},{"size":1968,"mtime":1607686454085,"results":"30","hashOfConfig":"27"},{"size":1585,"mtime":1606997836704,"results":"31","hashOfConfig":"27"},{"size":4999,"mtime":1608639883785,"results":"32","hashOfConfig":"27"},{"size":3859,"mtime":1607073019050,"results":"33","hashOfConfig":"27"},{"size":684,"mtime":1607686616200,"results":"34","hashOfConfig":"27"},{"size":1896,"mtime":1607773602067,"results":"35","hashOfConfig":"27"},{"size":1908,"mtime":1607686219451,"results":"36","hashOfConfig":"27"},{"size":1028,"mtime":1608422784456,"results":"37","hashOfConfig":"27"},{"size":1248,"mtime":1606997638624,"results":"38","hashOfConfig":"27"},{"size":1692,"mtime":1607686171349,"results":"39","hashOfConfig":"27"},{"size":2640,"mtime":1608639920772,"results":"40","hashOfConfig":"27"},{"size":2514,"mtime":1608726411174,"results":"41","hashOfConfig":"27"},{"size":6547,"mtime":1607686878766,"results":"42","hashOfConfig":"27"},{"size":159,"mtime":1607421132935,"results":"43","hashOfConfig":"27"},{"size":6709,"mtime":1608612147254,"results":"44","hashOfConfig":"27"},{"size":662,"mtime":1608032687908,"results":"45","hashOfConfig":"27"},{"size":229,"mtime":1608386855764,"results":"46","hashOfConfig":"27"},{"size":1855,"mtime":1607686200680,"results":"47","hashOfConfig":"27"},{"size":1229,"mtime":1608629549235,"results":"48","hashOfConfig":"27"},{"size":2139,"mtime":1608029525604,"results":"49","hashOfConfig":"27"},{"size":3846,"mtime":1608033788049,"results":"50","hashOfConfig":"27"},{"size":6866,"mtime":1608630560902,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"hfeo4r",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\index.js",[],["116","117"],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\reportWebVitals.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\App.js",["118","119"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AuthContextProvider from './contexts/AuthContext';\nimport CategoryContextProvider from './contexts/CategoryContext';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Home from './pages/home/home';\nimport Contexts from './contexts/Contexts';\n\n\nfunction App() {\n  window.$name = 'tester'\n  return (\n    <Contexts>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/access_register\" component={Register} />\n            <Route path=\"/home\" component={Home} />\n          </Switch>\n        </BrowserRouter>\n    </Contexts>\n  );\n}\n\nexport default App;","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\CategoryContext.js",["120"],"import React, { createContext, useState } from 'react';\r\n// import { CategoryContext } from '../contexts/';\r\nimport { FetchCategories, AddCategory, UpdateCategory } from '../api/categories';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryCotextProvider = (props) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryLoading, setCategoryLoadig] = useState(true);\r\n\r\n    const fetchCategories = async () => {\r\n        setCategoryLoadig(true)\r\n        let data = await FetchCategories();\r\n        setCategoryLoadig(false)\r\n        if (data != null) {\r\n            setCategories(data)\r\n        }\r\n    }\r\n\r\n\r\n    const addCategories = async (newData) => {\r\n        setCategoryLoadig(true)\r\n        let data = await AddCategory(newData);\r\n        setCategoryLoadig(false)\r\n        if (data != null) {\r\n            data.name = newData['name']\r\n            console.log(data)\r\n            setCategories([...categories, data])\r\n        } else {\r\n            alert('Something went wrong, make sure added category is not in dumplicated in your list.')\r\n        }\r\n    }\r\n\r\n\r\n    const updateCategory = async (oldData, newData) => {\r\n        setCategoryLoadig(true)\r\n        let data = await UpdateCategory(newData);\r\n        setCategoryLoadig(false)\r\n        if (data != null) {\r\n            var prevState = [...categories];\r\n            var index = prevState.indexOf(oldData)\r\n            prevState[index] = newData\r\n            setCategories(prevState)\r\n        } else {\r\n            alert(\"An error occured during the action.\");\r\n        }\r\n    }\r\n\r\n\r\n    const addCategoryData = async (data) => {\r\n        setCategories(data)\r\n    }\r\n\r\n\r\n    return(\r\n        <CategoryContext.Provider value={{\r\n            categories, fetchCategories, addCategories, updateCategory,\r\n            categoryLoading\r\n        }}>\r\n            {props.children}\r\n        </CategoryContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryCotextProvider","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Login.js",["121","122","123","124","125","126","127"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport FishPic from \"../../resources/images/login_fish.svg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const [code, setCode] = useState(\"\");\r\n  const [laoding, setLoading] = useState(false);\r\n  const [loginStat, setLoginStat] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { loginUser, setUserData } = useContext(AuthContext);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  async function handleLogin(event) {\r\n    event.preventDefault();\r\n    setLoginStat(false);\r\n    setLoading(true);\r\n    var stat = await loginUser(code);\r\n    setLoginStat(!stat);\r\n    setLoading(false);\r\n\r\n    if (stat) {\r\n      // if this returns true\r\n      history.replace(\"/home\");\r\n      \r\n    } else {\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (code == \"\") setLoginStat(false);\r\n\r\n    var prevData = localStorage.getItem(\"userData\");\r\n    if (prevData) {\r\n      setUserData(prevData);\r\n      history.replace(\"/home\");\r\n    }\r\n  }, [code]);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      \r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleLogin}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              type=\"password\"\r\n              id=\"code\"\r\n              label=\"Enter Code\"\r\n              name=\"code\"\r\n              autoComplete=\"code\"\r\n              autoFocus\r\n              id={loginStat ? \"outlined-error-helper-text\" : \"\"}\r\n              onChange={(val) => setCode(val.target.value)}\r\n              value={code}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n\r\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            Login Failed. Invalid User Code.\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Register.js",["128","129","130"],"import React from \"react\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Register() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n              />\r\n            </Grid> */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid> */}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\Contexts.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\home.js",["131","132","133","134","135","136","137"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport MainDrawer from '../../components/drawer';\r\nimport { headers } from '../../utils/utils'\r\nimport Categories from '../categories/Categories'\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport NewEntry from '../entries/Entries'\r\nimport Products from '../products/Products'\r\n// import Reports from '../reports/Reports'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { ProductContext } from '../../contexts/ProductContext'\r\nimport { SizeContext } from '../../contexts/SizeCotext'\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    var history = useHistory();\r\n    const { window, location } = props;\r\n    const { pathname } = props.location;\r\n    var prevData;\r\n\r\n    const { isLogin, setLogin } = useState(false)\r\n\r\n    const { fetchCategories } = useContext(CategoryContext)\r\n    const { fetchSizes } = useContext(SizeContext)\r\n    const { fetchProducts } = useContext(ProductContext)\r\n\r\n    useEffect(() => {\r\n        Promise.all([fetchCategories(), fetchSizes()]).then((values) => {\r\n            fetchProducts()\r\n        });\r\n    }, [])\r\n    \r\n    if (!localStorage.getItem('userData')) {\r\n        return (\r\n            <button onClick={() => history.replace('/')}>\r\n                Please Login to continue\r\n            </button>\r\n        )\r\n    } else {\r\n        return (\r\n            <MainDrawer pathName={pathname} >\r\n                <Switch>\r\n                    <Route path=\"/home\" exact component={Dashboard} />\r\n                    <Route path=\"/home/Categories\" component={Categories} />\r\n                    <Route path=\"/home/Entries\" component={NewEntry} />\r\n                    <Route path=\"/home/Products\" component={Products} />\r\n                </Switch>\r\n            </MainDrawer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\categories.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\ProductContext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\auth.js",["138"],"import Axios from 'axios';\r\nimport * as Constants from \"../utils/constants\"\r\nimport { headers } from \"../utils/utils\"\r\n\r\nexport async function UserLogin(code) {\r\n    try {\r\n        var res = await Axios({\r\n            method: 'post',\r\n            url: Constants.BASE_URL + \"/auth/login.php\",\r\n            validateStatus: () => true,\r\n            data: {\r\n                code: code\r\n            }\r\n        });\r\n        if (!res.data['error']) {\r\n            return res.data;\r\n        } else {\r\n            return null;\r\n        }\r\n        // return response.data\r\n        // alert(res);  \r\n    } catch (error) {\r\n        // console.log(res);\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function UserRegister(data) {\r\n    try {\r\n        let response = await Axios\r\n        .post(\r\n            Constants.BASE_URL + \"/auth/register.php\",\r\n            {\r\n                full_name: data.full_name,\r\n                position: data.position,\r\n                access_type: data.access_type\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            })\r\n\r\n            return response.data\r\n\r\n    } catch (error) {\r\n        return error.response.data\r\n    }\r\n}\r\n\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\SizeCotext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\utils.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\Products.js",["139","140","141","142"],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\components\\drawer.js",["143","144","145","146","147","148","149"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction MainDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  var history = useHistory();\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n//   const [userData, setUserData] = useState(user_name)\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"userData\");\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    var path = props.pathName.split(\"/\").pop();\r\n    if (path === \"\") setSelectedTab(0);\r\n    if (path === \"Categories\") setSelectedTab(1);\r\n    if (path === \"Products\") setSelectedTab(2);\r\n    if (path === \"Entries\") setSelectedTab(3);\r\n    if (path === \"Reports\") setSelectedTab(4);\r\n  }, []);\r\n\r\n  const drawerIcons = [\r\n    <DashboardIcon />,\r\n    <ListAltIcon />,\r\n    <AssignmentIcon />,\r\n    <CreateIcon />,\r\n    <AssessmentIcon />,\r\n  ];\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <List>\r\n        {[\"Dashboard\", \"Categories\", \"Products\", \"Entries\"].map(\r\n          (text, index) => (\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              component={Link}\r\n              to={text == \"Dashboard\" ? `/home` : `/home/${text}`}\r\n              onClick={() => setSelectedTab(index)}\r\n              selected={selectedTab == index}\r\n            >\r\n              <ListItemIcon>{drawerIcons[index]}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n              {/* <div style={{ display: 'flex', padding: 5, borderRadius: 40, backgroundColor: 'red', justifyContent: 'center', alignItems: 'center', width: 20, height: 20 }}><text style={{ color: 'white', fontSize: 10 }}>1</text></div> */}\r\n            </ListItem>\r\n          )\r\n        )}\r\n      </List>\r\n\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          flexGrow: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          alignSelf: \"stretch\",\r\n          width: 20,\r\n          backgroundColor: \"red\",\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => logOut()}\r\n            endIcon={<ExitToAppIcon />}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default MainDrawer;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\entries\\Entries.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\categories\\Categories.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\n\r\nfunction Categories() {\r\n  const classes = useStyles();\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories } = useContext(CategoryContext);\r\n  const { addProduct } = useContext(ProductContext);\r\n\r\n  const sizeLookup = {};\r\n  const categoryLookup = {};\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productSize, setProductSize] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  const [categoryOpt, setCategoryOpt] = useState([{ lookup: categoryLookup }]);\r\n\r\n  // const handleProductNameChange = (event) => {\r\n  //   setProductName(event.target.value);\r\n  //   console.log(event.target.value);\r\n  // };\r\n\r\n  // const handleProductCategoryChange = (event) => {\r\n  //   setProductCategory(event.target.value);\r\n  //   console.log(event.target.value);\r\n  // };\r\n\r\n  // const handleProductSizeChange = (event) => {\r\n  //   setProductSize(event.target.value);\r\n  //   console.log(event.target.value);\r\n  // };\r\n\r\n  // const handleProductPriceChange = (event) => {\r\n  //   setProductPrice(event.target.value);\r\n  //   console.log(event.target.value);\r\n  // };\r\n\r\n \r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<PostAddIcon />}\r\n        onClick={handleOpen}\r\n      >\r\n        New Category\r\n      </Button>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n            <form className={classes.form_prod} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"Product Name\"\r\n                variant=\"filled\"\r\n                // value={productName}\r\n                // onChange={handleProductNameChange}\r\n              />\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  // value={productCategory}\r\n                  // onChange={handleProductCategoryChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {/* {categories.map((category) => (\r\n                    <MenuItem value={category.id}>\r\n                      <em>{category.name}</em>\r\n                    </MenuItem>\r\n                  ))} */}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  // value={productSize}\r\n                  // onChange={handleProductSizeChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {/* {sizes.map((size) => (\r\n                    <MenuItem value={size.id}>\r\n                      <em>{size.name}</em>\r\n                    </MenuItem>\r\n                  ))} */}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"\"\r\n                variant=\"filled\"\r\n                // value={productPrice}\r\n                // onChange={handleProductPriceChange}\r\n              />\r\n            </form>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"outlined\">Default</Button>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"contained\" color=\"primary\" >\r\n                    Add Product\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: \"medium\",\r\n  },\r\n  form_prod: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n  },\r\n  formControl: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default Categories;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\Dashboard.js",["168"],"import React, { useState } from \"react\";\r\nimport Counter from \"./graphical-representations/counter\";\r\nimport { BarGraphs, LineGraphs } from \"./graphical-representations/graphs\";\r\n\r\nfunction Dashboard() {\r\n  return (\r\n    <div className=\"Main-Container\">\r\n      <div className=\"container top-section\">\r\n        <Counter />\r\n      </div>\r\n\r\n      <div className=\"container graph-section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <BarGraphs />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <LineGraphs />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\constants.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\sizes.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\products.js",["169"],"import Axios from \"axios\";\r\nimport * as Constants from \"../utils/constants\";\r\nimport { headers } from \"../utils/utils\";\r\n var localData = JSON.parse(localStorage.getItem('userData'));\r\n\r\n\r\nexport async function FetchProducts() {\r\n \r\n  try {\r\n    var res = await Axios({\r\n      method: \"get\",\r\n      headers: headers(),\r\n      url: Constants.BASE_URL + \"/products/get_products.php\",\r\n      validateStatus: () => true,\r\n    });\r\n\r\n    console.log(res);\r\n    if (!res.data[\"error\"]) {\r\n      return res.data[\"data\"];\r\n    } else {\r\n      return null;\r\n    }\r\n    // return response.data\r\n    // alert(res);\r\n  } catch (error) {\r\n    // console.log(res);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\nexport async function AddProducts(data) {\r\n\r\n  try {\r\n    let response = await Axios\r\n    .post(\r\n      Constants.BASE_URL + \"/products/add_product.php\",\r\n      {\r\n         product_name: data.product_name,\r\n          product_price: data.product_price,\r\n          size_id: data.size_id,\r\n          category_id: data.category_id,\r\n      },\r\n      {\r\n        headers: headers()\r\n      }\r\n    )\r\n\r\n    console.log(response.data)\r\n    return response.data\r\n  } catch (error) {\r\n    console.log(error.response.data)\r\n    return error.response.data\r\n}\r\n}","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\counter.js",["170"],"import React, { useState } from \"react\";\r\n\r\nimport CountUp from \"react-countup\";\r\nimport LocalDiningIcon from \"@material-ui/icons/LocalDining\";\r\nimport DirectionsWalkIcon from \"@material-ui/icons/DirectionsWalk\";\r\nimport AcUnitIcon from \"@material-ui/icons/AcUnit\";\r\n\r\nimport \"../Dashboard.scss\";\r\n\r\nfunction Counter() {\r\n  const [cardsValues, setCardValues] = useState([\r\n    {\r\n      header_title: \"Featured\",\r\n      card_title: 28,\r\n      card_text:\r\n        \"With supporting text below as a natural lead-in to additional content.\",\r\n      card_footer: \"Updated about a minute ago\",\r\n      card_logo: <LocalDiningIcon />,\r\n    },\r\n    {\r\n      header_title: \"Featured\",\r\n      card_title: 32,\r\n      card_text:\r\n        \"With supporting text below as a natural lead-in to additional content.\",\r\n      card_footer: \"Updated about a minute ago\",\r\n      card_logo: <DirectionsWalkIcon />,\r\n    },\r\n    {\r\n      header_title: \"Featured\",\r\n      card_title: 12,\r\n      card_text:\r\n        \"With supporting text below as a natural lead-in to additional content.\",\r\n      card_footer: \"Updated about a minute ago\",\r\n      card_logo: <AcUnitIcon />,\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n        {cardsValues.map((cards) => (\r\n          <div className=\"col\">\r\n            <div className=\"card text-center\">\r\n              <div className=\"card-header\">{cards.header_title}</div>\r\n              <div className=\"card-body\">\r\n                <div className=\"card-logo\">{cards.card_logo}</div>\r\n                <h5 className=\"card-title\">\r\n                  <CountUp start={0} end={cards.card_title} delay={0}>\r\n                    {({ countUpRef }) => (\r\n                      <div>\r\n                        <span ref={countUpRef} />\r\n                      </div>\r\n                    )}\r\n                  </CountUp>\r\n                </h5>\r\n                <p className=\"card-text\">{cards.card_text}</p>\r\n              </div>\r\n              <div className=\"card-footer text-muted\">{cards.card_footer}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\graphs.js",["171","172","173"],"import React, { useState } from \"react\";\r\nimport './graphs.scss';\r\n\r\nimport { Bar, Line  } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nexport function BarGraphs() {\r\n  const [barGraphData, setBarGraphData] = useState({\r\n    labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n    datasets: [\r\n      {\r\n        label: \"% of Votes\",\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n          \"rgba(255, 134,159,0.4)\",\r\n          \"rgba(98,  182, 239,0.4)\",\r\n          \"rgba(255, 218, 128,0.4)\",\r\n          \"rgba(113, 205, 205,0.4)\",\r\n          \"rgba(170, 128, 252,0.4)\",\r\n          \"rgba(255, 177, 101,0.4)\",\r\n        ],\r\n        borderWidth: 2,\r\n        borderColor: [\r\n          \"rgba(255, 134, 159, 1)\",\r\n          \"rgba(98,  182, 239, 1)\",\r\n          \"rgba(255, 218, 128, 1)\",\r\n          \"rgba(113, 205, 205, 1)\",\r\n          \"rgba(170, 128, 252, 1)\",\r\n          \"rgba(255, 177, 101, 1)\",\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [barChartOptions, setBarChartOptions] = useState({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n        xAxes: [\r\n          {\r\n            barPercentage: 1,\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            },\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ]\r\n      }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer className=\"mainBar-container\">\r\n        <h3 className=\"mt-5\">Top Selling of Yesterday</h3>\r\n        <Bar data={barGraphData} options={barChartOptions} />\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function LineGraphs() {\r\n    const [lineGraphData, setLineGraphData] = useState({\r\n      dataLine: {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n        datasets: [\r\n          {\r\n            label: \"My First dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(225, 204,230, .3)\",\r\n            borderColor: \"rgb(205, 130, 158)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(205, 130,1 58)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [65, 59, 80, 81, 56, 55, 40]\r\n          },\r\n          {\r\n            label: \"My Second dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n            borderColor: \"rgb(35, 26, 136)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(35, 26, 136)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <h3 className=\"mt-5\">Line chart</h3>\r\n    <Line data={lineGraphData} options={{ responsive: true }} />\r\n  </MDBContainer>\r\n  );\r\n}\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\AddProd.js",["174","175","176","177","178","179"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\n\r\nfunction AddProd() {\r\n  const classes = useStyles();\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories } = useContext(CategoryContext);\r\n  const { addProduct } = useContext(ProductContext);\r\n\r\n  const sizeLookup = {};\r\n  const categoryLookup = {};\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productSize, setProductSize] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  // const [categoryOpt, setCategoryOpt] = useState(\"\");\r\n\r\n  const handleProductNameChange = (event) => {\r\n    setProductName(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductCategoryChange = (event) => {\r\n    setProductCategory(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductSizeChange = (event) => {\r\n    setProductSize(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductPriceChange = (event) => {\r\n    setProductPrice(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n   const handleAddNow = async (event) => {\r\n     event.preventDefault();\r\n    await addProduct({\r\n      product_name: productName,\r\n      product_price: productPrice,\r\n      size_id: productSize,\r\n      category_id: productCategory,\r\n    });\r\n    \r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<PostAddIcon />}\r\n        onClick={handleOpen}\r\n      >\r\n        New Product\r\n      </Button>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n            <form className={classes.form_prod} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"Product Name\"\r\n                variant=\"filled\"\r\n                value={productName}\r\n                onChange={handleProductNameChange}\r\n              />\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  value={productCategory}\r\n                  onChange={handleProductCategoryChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {categories.map((category) => (\r\n                    <MenuItem value={category.id}>\r\n                      <em>{category.name}</em>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  value={productSize}\r\n                  onChange={handleProductSizeChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {sizes.map((size) => (\r\n                    <MenuItem value={size.id}>\r\n                      <em>{size.name}</em>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"\"\r\n                variant=\"filled\"\r\n                value={productPrice}\r\n                onChange={handleProductPriceChange}\r\n              />\r\n            </form>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"outlined\">Default</Button>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleAddNow} >\r\n                    Add Product\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: \"medium\",\r\n  },\r\n  form_prod: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n  },\r\n  formControl: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default AddProd;\r\n",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":2,"column":8,"nodeType":"186","messageId":"187","endLine":2,"endColumn":27},{"ruleId":"184","severity":1,"message":"188","line":3,"column":8,"nodeType":"186","messageId":"187","endLine":3,"endColumn":31},{"ruleId":"184","severity":1,"message":"189","line":50,"column":11,"nodeType":"186","messageId":"187","endLine":50,"endColumn":26},{"ruleId":"184","severity":1,"message":"190","line":6,"column":8,"nodeType":"186","messageId":"187","endLine":6,"endColumn":24},{"ruleId":"184","severity":1,"message":"191","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":16},{"ruleId":"184","severity":1,"message":"192","line":19,"column":8,"nodeType":"186","messageId":"187","endLine":19,"endColumn":15},{"ruleId":"184","severity":1,"message":"193","line":60,"column":10,"nodeType":"186","messageId":"187","endLine":60,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":100,"column":14,"nodeType":"196","messageId":"197","endLine":100,"endColumn":16},{"ruleId":"198","severity":1,"message":"199","line":107,"column":6,"nodeType":"200","endLine":107,"endColumn":12,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":134,"column":15,"nodeType":"204","endLine":134,"endColumn":65},{"ruleId":"184","severity":1,"message":"190","line":7,"column":8,"nodeType":"186","messageId":"187","endLine":7,"endColumn":24},{"ruleId":"184","severity":1,"message":"191","line":8,"column":8,"nodeType":"186","messageId":"187","endLine":8,"endColumn":16},{"ruleId":"184","severity":1,"message":"205","line":11,"column":8,"nodeType":"186","messageId":"187","endLine":11,"endColumn":11},{"ruleId":"184","severity":1,"message":"206","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":17},{"ruleId":"184","severity":1,"message":"207","line":18,"column":13,"nodeType":"186","messageId":"187","endLine":18,"endColumn":19},{"ruleId":"184","severity":1,"message":"208","line":18,"column":21,"nodeType":"186","messageId":"187","endLine":18,"endColumn":29},{"ruleId":"184","severity":1,"message":"209","line":20,"column":9,"nodeType":"186","messageId":"187","endLine":20,"endColumn":17},{"ruleId":"184","severity":1,"message":"210","line":22,"column":13,"nodeType":"186","messageId":"187","endLine":22,"endColumn":20},{"ruleId":"184","severity":1,"message":"211","line":22,"column":22,"nodeType":"186","messageId":"187","endLine":22,"endColumn":30},{"ruleId":"198","severity":1,"message":"212","line":32,"column":8,"nodeType":"200","endLine":32,"endColumn":10,"suggestions":"213"},{"ruleId":"184","severity":1,"message":"206","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":17},{"ruleId":"214","severity":1,"message":"215","line":23,"column":24,"nodeType":"216","messageId":"217","endLine":23,"endColumn":26},{"ruleId":"214","severity":1,"message":"215","line":27,"column":33,"nodeType":"216","messageId":"217","endLine":27,"endColumn":35},{"ruleId":"198","severity":1,"message":"218","line":31,"column":8,"nodeType":"200","endLine":31,"endColumn":10,"suggestions":"219"},{"ruleId":"184","severity":1,"message":"220","line":33,"column":19,"nodeType":"186","messageId":"187","endLine":33,"endColumn":29},{"ruleId":"184","severity":1,"message":"221","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":15},{"ruleId":"184","severity":1,"message":"222","line":9,"column":8,"nodeType":"186","messageId":"187","endLine":9,"endColumn":17},{"ruleId":"184","severity":1,"message":"223","line":14,"column":8,"nodeType":"186","messageId":"187","endLine":14,"endColumn":16},{"ruleId":"184","severity":1,"message":"224","line":22,"column":8,"nodeType":"186","messageId":"187","endLine":22,"endColumn":16},{"ruleId":"198","severity":1,"message":"225","line":59,"column":6,"nodeType":"200","endLine":59,"endColumn":8,"suggestions":"226"},{"ruleId":"194","severity":1,"message":"195","line":80,"column":24,"nodeType":"196","messageId":"197","endLine":80,"endColumn":26},{"ruleId":"194","severity":1,"message":"195","line":82,"column":37,"nodeType":"196","messageId":"197","endLine":82,"endColumn":39},{"ruleId":"184","severity":1,"message":"227","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"228","line":16,"column":8,"nodeType":"186","messageId":"187","endLine":16,"endColumn":22},{"ruleId":"184","severity":1,"message":"229","line":22,"column":11,"nodeType":"186","messageId":"187","endLine":22,"endColumn":16},{"ruleId":"184","severity":1,"message":"230","line":23,"column":11,"nodeType":"186","messageId":"187","endLine":23,"endColumn":21},{"ruleId":"184","severity":1,"message":"231","line":24,"column":11,"nodeType":"186","messageId":"187","endLine":24,"endColumn":21},{"ruleId":"184","severity":1,"message":"232","line":26,"column":9,"nodeType":"186","messageId":"187","endLine":26,"endColumn":19},{"ruleId":"184","severity":1,"message":"233","line":30,"column":10,"nodeType":"186","messageId":"187","endLine":30,"endColumn":13},{"ruleId":"184","severity":1,"message":"234","line":30,"column":15,"nodeType":"186","messageId":"187","endLine":30,"endColumn":21},{"ruleId":"184","severity":1,"message":"235","line":31,"column":10,"nodeType":"186","messageId":"187","endLine":31,"endColumn":21},{"ruleId":"184","severity":1,"message":"236","line":31,"column":23,"nodeType":"186","messageId":"187","endLine":31,"endColumn":37},{"ruleId":"184","severity":1,"message":"237","line":32,"column":10,"nodeType":"186","messageId":"187","endLine":32,"endColumn":25},{"ruleId":"184","severity":1,"message":"238","line":32,"column":27,"nodeType":"186","messageId":"187","endLine":32,"endColumn":45},{"ruleId":"184","severity":1,"message":"239","line":33,"column":10,"nodeType":"186","messageId":"187","endLine":33,"endColumn":21},{"ruleId":"184","severity":1,"message":"240","line":33,"column":23,"nodeType":"186","messageId":"187","endLine":33,"endColumn":37},{"ruleId":"184","severity":1,"message":"241","line":34,"column":10,"nodeType":"186","messageId":"187","endLine":34,"endColumn":22},{"ruleId":"184","severity":1,"message":"242","line":34,"column":24,"nodeType":"186","messageId":"187","endLine":34,"endColumn":39},{"ruleId":"184","severity":1,"message":"243","line":35,"column":10,"nodeType":"186","messageId":"187","endLine":35,"endColumn":21},{"ruleId":"184","severity":1,"message":"244","line":35,"column":23,"nodeType":"186","messageId":"187","endLine":35,"endColumn":37},{"ruleId":"184","severity":1,"message":"245","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"246","line":4,"column":6,"nodeType":"186","messageId":"187","endLine":4,"endColumn":15},{"ruleId":"184","severity":1,"message":"247","line":11,"column":23,"nodeType":"186","messageId":"187","endLine":11,"endColumn":36},{"ruleId":"184","severity":1,"message":"248","line":8,"column":24,"nodeType":"186","messageId":"187","endLine":8,"endColumn":39},{"ruleId":"184","severity":1,"message":"249","line":35,"column":27,"nodeType":"186","messageId":"187","endLine":35,"endColumn":45},{"ruleId":"184","severity":1,"message":"250","line":73,"column":27,"nodeType":"186","messageId":"187","endLine":73,"endColumn":43},{"ruleId":"184","severity":1,"message":"227","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"228","line":16,"column":8,"nodeType":"186","messageId":"187","endLine":16,"endColumn":22},{"ruleId":"184","severity":1,"message":"232","line":26,"column":9,"nodeType":"186","messageId":"187","endLine":26,"endColumn":19},{"ruleId":"184","severity":1,"message":"251","line":27,"column":9,"nodeType":"186","messageId":"187","endLine":27,"endColumn":23},{"ruleId":"184","severity":1,"message":"233","line":30,"column":10,"nodeType":"186","messageId":"187","endLine":30,"endColumn":13},{"ruleId":"184","severity":1,"message":"234","line":30,"column":15,"nodeType":"186","messageId":"187","endLine":30,"endColumn":21},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],"no-unused-vars","'AuthContextProvider' is defined but never used.","Identifier","unusedVar","'CategoryContextProvider' is defined but never used.","'addCategoryData' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'FishPic' is defined but never used.","'laoding' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["254"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Box' is defined but never used.","'headers' is defined but never used.","'window' is assigned a value but never used.","'location' is assigned a value but never used.","'prevData' is defined but never used.","'isLogin' is assigned a value but never used.","'setLogin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCategories', 'fetchProducts', and 'fetchSizes'. Either include them or remove the dependency array.",["255"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'categories', 'categoryLookup', 'sizeLookup', and 'sizes'. Either include them or remove the dependency array.",["256"],"'setColumns' is assigned a value but never used.","'Divider' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'ListIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'props.pathName'. Either include it or remove the dependency array.",["257"],"'useEffect' is defined but never used.","'FormHelperText' is defined but never used.","'sizes' is assigned a value but never used.","'categories' is assigned a value but never used.","'addProduct' is assigned a value but never used.","'sizeLookup' is assigned a value but never used.","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'productName' is assigned a value but never used.","'setProductName' is assigned a value but never used.","'productCategory' is assigned a value but never used.","'setProductCategory' is assigned a value but never used.","'productSize' is assigned a value but never used.","'setProductSize' is assigned a value but never used.","'productPrice' is assigned a value but never used.","'setProductPrice' is assigned a value but never used.","'categoryOpt' is assigned a value but never used.","'setCategoryOpt' is assigned a value but never used.","'useState' is defined but never used.","'localData' is assigned a value but never used.","'setCardValues' is assigned a value but never used.","'setBarGraphData' is assigned a value but never used.","'setBarChartOptions' is assigned a value but never used.","'setLineGraphData' is assigned a value but never used.","'categoryLookup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [code, history, setUserData]",{"range":"266","text":"267"},"Update the dependencies array to be: [fetchCategories, fetchProducts, fetchSizes]",{"range":"268","text":"269"},"Update the dependencies array to be: [categories, categoryLookup, sizeLookup, sizes]",{"range":"270","text":"271"},"Update the dependencies array to be: [props.pathName]",{"range":"272","text":"273"},[2966,2972],"[code, history, setUserData]",[1184,1186],"[fetchCategories, fetchProducts, fetchSizes]",[964,966],"[categories, categoryLookup, sizeLookup, sizes]",[2294,2296],"[props.pathName]"]