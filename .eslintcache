[{"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\index.js":"1","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\reportWebVitals.js":"2","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\App.js":"3","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\CategoryContext.js":"4","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\AuthContext.js":"5","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\Contexts.js":"6","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Register.js":"7","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Login.js":"8","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\home.js":"9","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\SizeCotext.js":"10","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\categories.js":"11","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\ProductContext.js":"12","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\auth.js":"13","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\Products.js":"14","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\utils.js":"15","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\components\\drawer.js":"16","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\Dashboard.js":"17","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\categories\\Categories.js":"18","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\entries\\Entries.js":"19","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\constants.js":"20","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\sizes.js":"21","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\products.js":"22","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\graphs.js":"23","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\AddProd.js":"24","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\counter.js":"25","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\page_not_found.js":"26","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\sizes\\Sizes.js":"27","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\DashboardContext.js":"28","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\dashboard.js":"29"},{"size":500,"mtime":499162500000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":499162500000,"results":"32","hashOfConfig":"31"},{"size":804,"mtime":1610360986070,"results":"33","hashOfConfig":"31"},{"size":2286,"mtime":1611137013431,"results":"34","hashOfConfig":"31"},{"size":1616,"mtime":1612087199068,"results":"35","hashOfConfig":"31"},{"size":851,"mtime":1611751186966,"results":"36","hashOfConfig":"31"},{"size":6565,"mtime":1612087199106,"results":"37","hashOfConfig":"31"},{"size":5436,"mtime":1611491026625,"results":"38","hashOfConfig":"31"},{"size":2314,"mtime":1612087204735,"results":"39","hashOfConfig":"31"},{"size":1692,"mtime":1607686171349,"results":"40","hashOfConfig":"31"},{"size":2490,"mtime":1611832963095,"results":"41","hashOfConfig":"31"},{"size":1555,"mtime":1610540636389,"results":"42","hashOfConfig":"31"},{"size":1216,"mtime":1612087199065,"results":"43","hashOfConfig":"31"},{"size":3183,"mtime":1611230606905,"results":"44","hashOfConfig":"31"},{"size":2640,"mtime":1608639920772,"results":"45","hashOfConfig":"31"},{"size":9089,"mtime":1611497932934,"results":"46","hashOfConfig":"31"},{"size":1152,"mtime":1612087204731,"results":"47","hashOfConfig":"31"},{"size":2877,"mtime":1611145949759,"results":"48","hashOfConfig":"31"},{"size":7759,"mtime":1610324676220,"results":"49","hashOfConfig":"31"},{"size":280,"mtime":1612088083664,"results":"50","hashOfConfig":"31"},{"size":1864,"mtime":1611832912998,"results":"51","hashOfConfig":"31"},{"size":1692,"mtime":1611832976647,"results":"52","hashOfConfig":"31"},{"size":4188,"mtime":1609755891559,"results":"53","hashOfConfig":"31"},{"size":6959,"mtime":1608880679533,"results":"54","hashOfConfig":"31"},{"size":3618,"mtime":1612355732824,"results":"55","hashOfConfig":"31"},{"size":1007,"mtime":1612087199112,"results":"56","hashOfConfig":"31"},{"size":2715,"mtime":1611146715598,"results":"57","hashOfConfig":"31"},{"size":1232,"mtime":1612355112376,"results":"58","hashOfConfig":"31"},{"size":755,"mtime":1612355398479,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"hfeo4r",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\index.js",[],["134","135"],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\reportWebVitals.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\App.js",["136","137"],"import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AuthContextProvider from './contexts/AuthContext';\nimport CategoryContextProvider from './contexts/CategoryContext';\nimport Login from './pages/auth/Login';\nimport Register from './pages/auth/Register';\nimport Home from './pages/home/home';\nimport Contexts from './contexts/Contexts';\n\n\nfunction App() {\n  window.$name = 'tester'\n  return (\n    <Contexts>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/access_register\" component={Register} />\n            <Route path=\"/home\" component={Home} />\n\n            {/* <Route path=\"/Register\" component={Home} /> */}\n          </Switch>\n        </BrowserRouter>\n    </Contexts>\n  );\n}\n\nexport default App;","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\CategoryContext.js",["138"],"import React, { createContext, useState } from 'react';\r\nimport { FetchCategories, AddCategory, UpdateCategory, DeleteCategory } from '../api/categories';\r\n\r\nexport const CategoryContext = createContext();\r\n\r\nconst CategoryCotextProvider = (props) => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [categoryLoading, setCategoryLoading] = useState(true);\r\n\r\n    const fetchCategories = async () => {\r\n        setCategoryLoading(true)\r\n        let data = await FetchCategories();\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            setCategories(data)\r\n        }\r\n    }\r\n\r\n\r\n    const addCategories = async (newData) => {\r\n        setCategoryLoading(true)\r\n        let data = await AddCategory(newData);\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            data.name = newData['name']\r\n            console.log(data)\r\n            setCategories([...categories, data])\r\n        } else {\r\n            alert('Something went wrong, make sure added category is not in dumplicated in your list.')\r\n        }\r\n    }\r\n\r\n\r\n    const updateCategory = async (oldData, newData) => {\r\n        setCategoryLoading(true)\r\n        let data = await UpdateCategory(newData);\r\n        setCategoryLoading(false)\r\n        if (data != null) {\r\n            var prevState = [...categories];\r\n            var index = prevState.indexOf(oldData)\r\n            prevState[index] = newData\r\n            setCategories(prevState)\r\n        } else {\r\n            alert(\"An error occured during the action.\");\r\n        }\r\n    }\r\n\r\n    const deleteCategory = async(data) => {\r\n        setCategoryLoading(true)\r\n        let itemData = await DeleteCategory(data)\r\n        setCategoryLoading(false)\r\n        if (itemData != null) {\r\n            itemData = data['id'] \r\n        } else {\r\n            alert(\"An error occured during the action.\");\r\n        }\r\n    }\r\n\r\n\r\n    const addCategoryData = async (data) => {\r\n        setCategories(data)\r\n    }\r\n\r\n\r\n    return(\r\n        <CategoryContext.Provider value={{\r\n            categories, fetchCategories, addCategories, updateCategory, deleteCategory,\r\n            categoryLoading\r\n        }}>\r\n            {props.children}\r\n        </CategoryContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport default CategoryCotextProvider","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\Contexts.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Register.js",["139","140","141","142","143","144","145","146","147","148","149"],"import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport \"./auth.scss\"\r\nimport { BorderColor } from \"@material-ui/icons\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n\r\nfunction Register() {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n   const { registerUser } = useContext(AuthContext)\r\n\r\n  const [fullname, setFullname] = useState(\"\");\r\n  const [accountType, setAccountType] = useState(\"\");\r\n  const [position, setPosition] = useState(\"\");\r\n  const [Dept, setDept] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  // Snackbar*****\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n   // Snackbar*****\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  async function handleRegister(event) {\r\n    event.preventDefault();\r\n    var stat = await registerUser({\r\n      full_name: fullname ,\r\n      position: position,\r\n      access_type: accountType\r\n    });\r\n\r\n    if (stat === false) {\r\n      history.replace(\"/\");\r\n    }else {\r\n      handleClick()\r\n      setErrorMsg(\"Error: \"+stat.message)\r\n      alert(\"Error: \" + stat.message)\r\n    }\r\n  }\r\n\r\n  const [ accountTypeState, setAccountTypeState ] = useState([\r\n    {\r\n      value: \"1\",\r\n      label: \"Admin\"\r\n    },\r\n    {\r\n      value: \"2\",\r\n      label: \"Staff\"\r\n    }\r\n  ])\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register for an Account\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleRegister}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"firstName\"\r\n                variant=\"filled\"\r\n                required={true}\r\n                // helperText=\"This is required\"\r\n               \r\n                fullWidth\r\n                id=\"firstName\"\r\n                label={\"First Name\"}\r\n                value={fullname}\r\n                onChange={(val) => setFullname(val.target.value)}\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n           \r\n            \r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"filled\"\r\n                className={classes.formControl}\r\n                id=\"formControl\"\r\n                // helperText=\"This is required\"\r\n                required={true}\r\n                fullWidth\r\n                name=\"position\"\r\n                label=\"Position\"\r\n                type=\"text\"\r\n                id=\"position\"\r\n                onChange={(val) => setPosition(val.target.value)}\r\n                value={position}\r\n              />\r\n            </Grid>\r\n\r\n            <FormControl variant=\"filled\" className={classes.formControl}>\r\n             \r\n             <InputLabel htmlFor=\"outlined-age-native-simple\">Account Type to register</InputLabel>\r\n             <Select\r\n               native\r\n               required\r\n               value={accountType}\r\n               label=\"Account Type to register\"\r\n               inputProps={{\r\n                 name: \"accountType\",\r\n                 id: \"outlined-age-native-simple\",\r\n               }}\r\n\r\n               onChange={(val) => setAccountType(val.target.value)}\r\n             >\r\n               <option aria-label=\"None\" value=\"\" />\r\n               {\r\n                 accountTypeState.map(accType => (\r\n                   <option value={accType.value}>{accType.label}</option>\r\n                 )) \r\n               }\r\n             </Select>\r\n           </FormControl>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            id=\"btn-submit\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleRegister}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\r\n      <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            Registration Failed. {errorMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: \"#57B894\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(0.4),\r\n    minWidth: \"98%\",\r\n    marginTop: \"12px\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default Register;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\auth\\Login.js",["150","151","152","153","154","155","156","157","158","159"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\n\r\nimport FishPic from \"../../resources/images/login_fish.svg\";\r\nimport Register from \"./Register\";\r\nimport './auth.scss'\r\n\r\nfunction Login() {\r\n  const classes = useStyles();\r\n  var history = useHistory();\r\n\r\n  const [code, setCode] = useState(\"\");\r\n  const [laoding, setLoading] = useState(false);\r\n  const [loginStat, setLoginStat] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { loginUser, setUserData } = useContext(AuthContext);\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  async function handleLogin(event) {\r\n    event.preventDefault();\r\n    setLoginStat(false);\r\n    setLoading(true);\r\n    var stat = await loginUser(code);\r\n    setLoginStat(!stat);\r\n    setLoading(false);\r\n\r\n    if (stat) {\r\n      // if this returns true\r\n      history.replace(\"/home\");\r\n      \r\n    } else {\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (code == \"\") setLoginStat(false);\r\n\r\n    var prevData = localStorage.getItem(\"userData\");\r\n    if (prevData) {\r\n      setUserData(prevData);\r\n      history.replace(\"/home\");\r\n    }\r\n  }, [code]);\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      \r\n\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h4\" className=\"white-title\">Junex Seafood & Grill</Typography>\r\n          {/* <Typography component=\"h3\" variant=\"h5\" className=\"white-texts\">\r\n            Sign in\r\n          </Typography> */}\r\n          <form className={classes.form} noValidate onSubmit={handleLogin}>\r\n            <TextField\r\n              variant=\"filled\"\r\n              className=\"white-textFields\"\r\n              margin=\"normal\"\r\n              required={true}\r\n              fullWidth\r\n              type=\"password\"\r\n              id=\"code\"\r\n              label=\"Enter Code\"\r\n              name=\"code\"\r\n              autoComplete=\"code\"\r\n              autoFocus\r\n              id={loginStat ? \"outlined-error-helper-text\" : \"\"}\r\n              onChange={(val) => setCode(val.target.value)}\r\n              value={code}\r\n            />\r\n            \r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              id=\"btn-submit\"\r\n              className={classes.submit}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n                {/* <Link href=\"#\" variant=\"body2\">\r\n                  Forgot password?\r\n                </Link> */}\r\n              </Grid>\r\n              <Grid item>\r\n                <Link href=\"/access_register\" variant=\"body2\" className=\"white-links\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </div>\r\n\r\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity=\"error\">\r\n            Login Failed. Invalid User Code.\r\n          </Alert>\r\n        </Snackbar>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \r\n    height: \"100vh\",\r\n    \r\n  },\r\n  image: {\r\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor:\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[50]\r\n        : theme.palette.grey[900],\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n    \r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    paddingTop: \"10%\",\r\n    \r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(1, 0, 2),\r\n    backgroundColor: \"#57B894\"\r\n  },\r\n}));\r\n\r\nexport default Login;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\home.js",["160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport MainDrawer from '../../components/drawer';\r\nimport { headers } from '../../utils/utils'\r\nimport Categories from '../categories/Categories'\r\nimport Dashboard from '../dashboard/Dashboard';\r\nimport NewEntry from '../entries/Entries'\r\nimport Products from '../products/Products'\r\n// import Reports from '../reports/Reports'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { ProductContext } from '../../contexts/ProductContext'\r\nimport { SizeContext } from '../../contexts/SizeCotext'\r\nimport { DashboardContext } from '../../contexts/DashboardContext';\r\n\r\nimport Register from '../auth/Register';\r\nimport Page_not_found from './page_not_found';\r\nimport Sizes from '../sizes/Sizes';\r\n\r\n\r\n\r\n\r\nfunction Home(props) {\r\n    var history = useHistory();\r\n    const { window, location } = props;\r\n    const { pathname } = props.location;\r\n    var prevData;\r\n\r\n    const { isLogin, setLogin } = useState(false)\r\n\r\n    const { fetchCategories } = useContext(CategoryContext)\r\n    const { fetchSizes } = useContext(SizeContext)\r\n    const { fetchProducts } = useContext(ProductContext)\r\n    const {fetchTopEntries} = useContext(DashboardContext)\r\n\r\n    useEffect(() => {\r\n        Promise.all([fetchCategories(), fetchSizes()]).then((values) => {\r\n            fetchProducts()\r\n        });\r\n        fetchTopEntries('');\r\n    }, [])\r\n    \r\n    if (!localStorage.getItem('userData')) {\r\n        return (\r\n            <Page_not_found />\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n            <MainDrawer pathName={pathname} >\r\n                <Switch>\r\n                    <Route path=\"/home\" exact component={Dashboard} />\r\n                    <Route path=\"/home/Categories\" component={Categories} />\r\n                    <Route path=\"/home/Entries\" component={NewEntry} />\r\n                    <Route path=\"/home/Products\" component={Products} />\r\n                    <Route path=\"/home/Product Sizes\" component={Sizes} />\r\n                    \r\n                    \r\n                </Switch>\r\n            </MainDrawer>\r\n\r\n            <Route path=\"/Register\" component={Register} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\SizeCotext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\categories.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\ProductContext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\auth.js",["169"],"import Axios from 'axios';\r\nimport * as Constants from \"../utils/constants\"\r\nimport { headers } from \"../utils/utils\"\r\n\r\nexport async function UserLogin(code) {\r\n    try {\r\n        var res = await Axios({\r\n            method: 'post',\r\n            url: Constants.BASE_URL + \"/auth/login.php\",\r\n            validateStatus: () => true,\r\n            data: {\r\n                code: code\r\n            }\r\n        });\r\n        if (!res.data['error']) {\r\n            return res.data;\r\n        } else {\r\n            console.log(res.data['error'])\r\n            return res.data['error'];\r\n        }\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport async function UserRegister(data) {\r\n    try {\r\n        let response = await Axios\r\n        .post(\r\n            Constants.BASE_URL + \"/auth/register.php\",\r\n            {\r\n                full_name: data.full_name,\r\n                position: data.position,\r\n                access_type: data.access_type\r\n            },\r\n            {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                }\r\n            })\r\n\r\n            return response.data\r\n\r\n    } catch (error) {\r\n        return error.response.data\r\n    }\r\n}\r\n\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\Products.js",["170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186"],"import MaterialTable from \"material-table\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport './AddProd.scss';\r\n\r\nimport { tableIcons, tablePageSizeoptions } from \"../../utils/utils\";\r\n\r\n//contexts\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\nimport Categories from \"../categories/Categories\";\r\nimport AddProd from \"./AddProd\";\r\n\r\nfunction Products(props) {\r\n  const { products, productsLoading } = useContext(ProductContext);\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories } = useContext(CategoryContext);\r\n  const { addProduct, updateProduct } = useContext(ProductContext);\r\n\r\n  const sizeLookup = {};\r\n  const categoryLookup = {};\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productSize, setProductSize] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    sizes.map((size) => {\r\n      sizeLookup[size.id] = size.name;\r\n    });\r\n\r\n    categories.map((category) => {\r\n      categoryLookup[category.id] = category.name;\r\n    });\r\n  }, {});\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"ID\", field: \"id\", editable: \"never\" },\r\n    { title: \"Product Name\", field: \"name\" },\r\n    { title: \"Size\", field: \"size\", lookup: sizeLookup },\r\n    { title: \"Category\", field: \"category\", lookup: categoryLookup },\r\n    { title: \"Price\", field: \"price\", type: 'numeric' },\r\n    { title: \"Date Created\", field: \"created_at\", editable: \"never\" },\r\n  ]);\r\n\r\n  return (\r\n      <MaterialTable\r\n        isLoading={productsLoading}\r\n        icons={tableIcons}\r\n        options={tablePageSizeoptions}\r\n        title=\"Products on Menu\"\r\n        columns={columns}\r\n        data={products}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise(async (resolve, reject) => {\r\n            \r\n              let status = await addProduct({\r\n                product_name: newData.name,\r\n                product_price: newData.price,\r\n                size_id: newData.size,\r\n                category_id: newData.category,\r\n              });\r\n\r\n              if (status !== false) {\r\n               \r\n              } else {\r\n                alert(status.error);\r\n              }\r\n              \r\n              resolve();\r\n\r\n            }),\r\n\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              await updateProduct({\r\n                product_id: oldData.id,\r\n                product_name: oldData.name,\r\n                product_price: oldData.price,\r\n                category_id: oldData.category,\r\n              }, \r\n              { \r\n                product_id: newData.id,\r\n                product_name: newData.name,\r\n                product_price: newData.price,\r\n                category_id: newData.category,\r\n              })\r\n              resolve();\r\n            }),\r\n        }}\r\n      />\r\n  );\r\n}\r\n\r\nexport default Products;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\utils.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\components\\drawer.js",["187","188","189","190","191","192","193","194","195","196","197"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport './drawer.scss'\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport StarBorder from '@material-ui/icons/StarBorder';\r\nimport CPPH_Logo from '../resources/images/CPPH2.png'\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { HoverState } from \"@devexpress/dx-react-chart\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nfunction MainDrawer(props) {\r\n  const { window } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  var history = useHistory();\r\n\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [open, setOpen] = React.useState(false);\r\n//   const [userData, setUserData] = useState(user_name)\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"userData\");\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    var path = props.pathName.split(\"/\").pop();\r\n    if (path === \"\") setSelectedTab(0);\r\n    if (path === \"Sizes\") setSelectedTab(1);\r\n    if (path === \"Categories\") setSelectedTab(2);\r\n    if (path === \"Products\") setSelectedTab(3);\r\n    if (path === \"Entries\") setSelectedTab(4);\r\n    if (path === \"Reports\") setSelectedTab(5);\r\n    \r\n    \r\n  }, []);\r\n\r\n  const drawerIcons = [\r\n    <DashboardIcon />,\r\n    <ListAltIcon />,\r\n    <AssignmentIcon />,\r\n    <CreateIcon />,\r\n    <AssessmentIcon />,\r\n  ];\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n      {/* <Divider /> */}\r\n      <List>\r\n      <ListItem button onClick={handleClick} >\r\n              <ListItemIcon>\r\n                <InboxIcon className=\"drawer-icon\" />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Sales Entries\" />\r\n              {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n              <List component=\"div\" disablePadding>\r\n                <ListItem button className={classes.nested} to={`/home/Entries`} component={Link}>\r\n                  <ListItemIcon className=\"drawer-icon\">\r\n                    <AddIcon className=\"drawer-icon\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"New Entry\" />\r\n                </ListItem>\r\n\r\n                <ListItem button className={classes.nested} to={`/home/Entries`} component={Link}>\r\n                  <ListItemIcon>\r\n                    <HistoryIcon className=\"drawer-icon\"   />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"History\" />\r\n                </ListItem>\r\n              </List>\r\n            </Collapse>\r\n        {[\r\n          \"Dashboard\",\r\n          \"Product Sizes\",\r\n          \"Categories\",\r\n          \"Products\",\r\n          // \"Entries\",\r\n        ].map((text, index) => (\r\n          <>\r\n            <ListItem\r\n              button\r\n              key={text}\r\n              className=\"DrawerItems\"\r\n              component={Link}\r\n              to={text == \"Dashboard\" ? `/home` : `/home/${text}`}\r\n              onClick={() => setSelectedTab(index)}\r\n              selected={selectedTab == index}\r\n            >\r\n              <ListItemIcon className=\"drawer-icon\">{drawerIcons[index]}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n              {/* <div style={{ display: 'flex', padding: 5, borderRadius: 40, backgroundColor: 'red', justifyContent: 'center', alignItems: 'center', width: 20, height: 20 }}><text style={{ color: 'white', fontSize: 10 }}>1</text></div> */}\r\n            </ListItem>\r\n\r\n            \r\n          </>\r\n        ))}\r\n        \r\n      </List>\r\n\r\n      <div\r\n        style={{\r\n          flex: 1,\r\n          flexGrow: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          alignSelf: \"stretch\",\r\n          width: 20,\r\n          backgroundColor: \"red\",\r\n        }}\r\n      ></div>\r\n      {/* <div>\r\n        <img src={CPPH_Logo} />\r\n      </div> */}\r\n    </div>\r\n  );\r\n\r\n  const container =\r\n    window !== undefined ? () => window().document.body : undefined;\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar style={{ justifyContent: \"space-between\" }}>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap className=\"title\">\r\n            Sales Inventory Monitoring System\r\n          </Typography>\r\n          <Button\r\n          // className={classes.logoutBtn}\r\n          className=\"logoutBtn\"\r\n            variant=\"outlined\"\r\n            // color=\"default\"\r\n            onClick={() => logOut()}\r\n            endIcon={<ExitToAppIcon />}\r\n          >\r\n            Logout\r\n          </Button>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      // backgroundColor: \"#57B894\"\r\n      backgroundColor: \"#F7F7F7\"\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"#2E3033\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  logoutBtn: {\r\n    color: \"#569DFC\",\r\n    borderColor: \"#569DFC\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n}));\r\n\r\nexport default MainDrawer;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\Dashboard.js",["198","199","200","201","202"],"import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { CircularProgress, LinearProgress } from \"@material-ui/core\";\r\nimport Counter from \"./graphical-representations/counter\";\r\nimport { BarGraphs, LineGraphs } from \"./graphical-representations/graphs\";\r\nimport { DashboardContext } from \"../../contexts/DashboardContext\";\r\n\r\n\r\nfunction Dashboard() {\r\n  const { dataLoading, fetchTopEntries, dashboardData } = useContext(DashboardContext);\r\n\r\n\r\n  if (dataLoading)\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}>\r\n         <CircularProgress/>\r\n      </div>\r\n    )\r\n\r\n\r\n  return (\r\n    <div className=\"Main-Container\">\r\n      <div className=\"container top-section\">\r\n        <Counter />\r\n      </div>\r\n\r\n      <div className=\"container graph-section\">\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <BarGraphs />\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <LineGraphs />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\categories\\Categories.js",["203","204","205","206","207","208","209","210","211"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\nimport MaterialTable from \"material-table\";\r\nimport { tableIcons, tablePageSizeoptions } from \"../../utils/utils\";\r\n\r\nfunction Categories() {\r\n  const classes = useStyles();\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories, categoryLoading } = useContext(CategoryContext);\r\n  const { addCategories, updateCategory, deleteCategory } = useContext(CategoryContext);\r\n  const categoryLookup = {};\r\n\r\n  const [category, setCategory] = useState(CategoryContext);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"ID\", field: \"id\", editable: \"never\" },\r\n    { title: \"Category Name\", field: \"name\" },\r\n    { title: \"Date Created\", field: \"created_at\", editable: \"never\" },\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <MaterialTable\r\n        isLoading={categoryLoading}\r\n        icons={tableIcons}\r\n        options={tablePageSizeoptions}\r\n        title=\"Categories to Choose from\"\r\n        columns={columns}\r\n        data={categories}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise(async (resolve, reject) => {\r\n            \r\n              let status = await addCategories({\r\n                name: newData.name,\r\n              });\r\n\r\n              if (status != false) {\r\n               \r\n              } else {\r\n                alert(status.error);\r\n              }\r\n              resolve();\r\n\r\n            }),\r\n\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              let status = await updateCategory({\r\n                category_id: oldData.id,\r\n                category_name: oldData.name\r\n              }, \r\n              {\r\n                category_id: newData.id,\r\n                category_name: newData.name\r\n              })\r\n\r\n              if(status != false) {\r\n                window.location.reload(false);\r\n              }\r\n              resolve();\r\n            }),\r\n\r\n          onRowDelete: (oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              setTimeout(() => {\r\n                const dataDelete = [...categories];\r\n                const index = oldData.tableData.id;\r\n                dataDelete.splice(index, 1);\r\n                setCategory([...dataDelete]);\r\n\r\n                resolve();\r\n            }, 1000);\r\n\r\n              await deleteCategory({\r\n                category_id: oldData.id\r\n              })\r\n              reject();\r\n            }),\r\n        }}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n}));\r\n\r\nexport default Categories;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\entries\\Entries.js",["212","213","214","215","216","217","218","219"],"import MaterialTable from \"material-table\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { tableIcons, tablePageSizeoptions } from \"../../utils/utils\";\r\nimport \"./styles.scss\";\r\n\r\n//contexts\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: \"100%\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction NewEntries() {\r\n  const classes = useStyles();\r\n  const [Category, setCategory] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const [Product, setProduct] = React.useState(\"\");\r\n\r\n  const handleChangeProduct = (event) => {\r\n    setProduct(event.target.value);\r\n  };\r\n\r\n  const { fetchCategories } = useContext(CategoryContext);\r\n  const { fetchSizes } = useContext(SizeContext);\r\n  const { fetchProducts } = useContext(ProductContext);\r\n\r\n  // useEffect(() => {\r\n  //   Promise.all([fetchCategories(), fetchSizes()]).then((values) => {\r\n  //     fetchProducts();\r\n  //     console.log(\"akoa ning categorisss\" + fetchCategories());\r\n  //   });\r\n  // }, []);\r\n\r\n  //table\r\n\r\n  const { products, productsLoading } = useContext(ProductContext);\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories } = useContext(CategoryContext);\r\n\r\n  const [product_name, setProduct_name] = useState(\"\");\r\n  const [product_price, setProduct_price] = useState(\"\");\r\n  const [size_id, setSize_id] = useState(\"\");\r\n  const [category_id, setCategory_id] = useState(\"\");\r\n  const { addProduct } = useContext(ProductContext);\r\n\r\n  const sizeLookup = {};\r\n  const categoryLookup = {};\r\n\r\n  const handleAddNow = async (event) => {\r\n    event.preventDefault();\r\n    setProduct_name(columns.name);\r\n    setProduct_price(columns.price);\r\n    setSize_id(columns.size);\r\n    setCategory_id(columns.category);\r\n\r\n    await addProduct({ product_name, product_price, size_id, category_id });\r\n  };\r\n\r\n  useEffect(() => {\r\n    sizes.map((size) => {\r\n      sizeLookup[size.id] = size.name;\r\n    });\r\n\r\n    categories.map((category) => {\r\n      categoryLookup[category.id] = category.name;\r\n    });\r\n  }, []);\r\n\r\n  const [columns, setColumns] = useState([\r\n    { title: \"ID\", field: \"id\", editable: \"never\" },\r\n    { title: \"Product Name\", field: \"name\" },\r\n    { title: \"Size\", field: \"size\", lookup: sizeLookup },\r\n    { title: \"Category\", field: \"category\", lookup: categoryLookup },\r\n    { title: \"Price\", field: \"price\" },\r\n    { title: \"Date Created\", field: \"created_at\", editable: \"never\" },\r\n  ]);\r\n\r\n  //table\r\n\r\n  return (\r\n    <div className=\"container-fluid entry-main-container\">\r\n      <div className=\"row entry-title-row\">\r\n        <h1>Entries</h1>\r\n      </div>\r\n\r\n      <div className=\"row entry-number-row\">\r\n        <div>\r\n          <label>\r\n            Entry Number:\r\n            <input type=\"text\" disabled name=\"name\" />\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n\r\n      <div className=\"row entry-select-input\">\r\n        <div className=\"col-sm\"></div>\r\n        <div className=\"col-sm\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel\r\n              id=\"demo-simple-select-outlined-label\"\r\n              className=\"entry-select\"\r\n            >\r\n              Product Name:{\" \"}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={Product}\r\n              onChange={handleChangeProduct}\r\n              label=\"Product Name: \"\r\n            >\r\n              {products.map((product) => {\r\n                return <MenuItem value={product.size +\" - \"+ product.name + \" - \" + product.category}>{product.size +\" - \"+ product.name + \" - \" + product.category}</MenuItem>\r\n              })}\r\n              \r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel\r\n              id=\"demo-simple-select-outlined-label\"\r\n              className=\"entry-select\"\r\n            >\r\n              Category\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={Category}\r\n              onChange={handleChange}\r\n              label=\"Category\"\r\n            >\r\n              {categories.map((category) => {\r\n                return <MenuItem value={category.id}>{category.name}</MenuItem>;\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        \r\n\r\n        <div className=\"col-sm\">\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel\r\n              id=\"demo-simple-select-outlined-label\"\r\n              className=\"entry-select\"\r\n            >\r\n              Size\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              value={Category}\r\n              onChange={handleChange}\r\n              label=\"Category\"\r\n            >\r\n              <MenuItem value=\"Frozen Goods1\">Frozen Goods1</MenuItem>\r\n              <MenuItem value=\"Frozen Goods2\">Frozen Goods2</MenuItem>\r\n              <MenuItem value=\"Frozen Goods3\">Frozen Goods3</MenuItem>\r\n              <MenuItem value=\"Frozen Goods4\">Frozen Goods4</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          QTY Here\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row entry-text-area\">\r\n        {/* <div className=\"col\"> */}\r\n        <TextareaAutosize\r\n          className=\"txt-area\"\r\n          aria-label=\"minimum height\"\r\n          rowsMin={6}\r\n          placeholder=\"Minimum 3 rows\"\r\n        />\r\n        {/* </div> */}\r\n      </div>\r\n\r\n      <div className=\"container btns-container\">\r\n        <div className=\"col-sm\">\r\n          <Button variant=\"contained\" className=\"btn\">\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" className=\"btn\">\r\n            Add Item/s\r\n          </Button>\r\n        </div>\r\n        {/* <div className=\"col-sm\">\r\n         \r\n        </div> */}\r\n      </div>\r\n\r\n      {/*Table*/}\r\n      <MaterialTable\r\n        isLoading={productsLoading}\r\n        icons={tableIcons}\r\n        options={tablePageSizeoptions}\r\n        title=\"Products\"\r\n        columns={columns}\r\n        data={products}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              console.log(\"New data: \" + columns.name + \"; \" + columns.price);\r\n              reject();\r\n            }),\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              reject();\r\n            }),\r\n          onRowDelete: (oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              reject();\r\n            }),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewEntries;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\utils\\constants.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\sizes.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\products.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\graphs.js",["220","221","222","223","224","225"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport './graphs.scss';\r\n\r\nimport { Bar, Line  } from \"react-chartjs-2\";\r\nimport { MDBContainer } from \"mdbreact\";\r\n\r\nimport { ProductContext } from \"../../../contexts/ProductContext\";\r\n\r\n\r\n\r\nexport function BarGraphs() {\r\n  const { fetchProducts } = useContext(ProductContext);\r\n  const { products, productsLoading } = useContext(ProductContext);\r\n\r\n  const prodLookup = {};\r\n\r\n  useEffect(() => {\r\n    products.map((product) => {\r\n      prodLookup[product.id] = product.name\r\n    })\r\n  }, )\r\n\r\n  const [barGraphData, setBarGraphData] = useState({\r\n    labels: [\r\n      prodLookup\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"% of Votes\",\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        backgroundColor: [\r\n          \"rgba(255, 134,159,0.4)\",\r\n          \"rgba(98,  182, 239,0.4)\",\r\n          \"rgba(255, 218, 128,0.4)\",\r\n          \"rgba(113, 205, 205,0.4)\",\r\n          \"rgba(170, 128, 252,0.4)\",\r\n          \"rgba(255, 177, 101,0.4)\",\r\n        ],\r\n        borderWidth: 2,\r\n        borderColor: [\r\n          \"rgba(255, 134, 159, 1)\",\r\n          \"rgba(98,  182, 239, 1)\",\r\n          \"rgba(255, 218, 128, 1)\",\r\n          \"rgba(113, 205, 205, 1)\",\r\n          \"rgba(170, 128, 252, 1)\",\r\n          \"rgba(255, 177, 101, 1)\",\r\n        ],\r\n      },\r\n    ],\r\n  });\r\n\r\n  const [barChartOptions, setBarChartOptions] = useState({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n        xAxes: [\r\n          {\r\n            barPercentage: 1,\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            }\r\n          }\r\n        ],\r\n        yAxes: [\r\n          {\r\n            gridLines: {\r\n              display: true,\r\n              color: \"rgba(0, 0, 0, 0.1)\"\r\n            },\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }\r\n        ]\r\n      }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <MDBContainer className=\"mainBar-container\">\r\n        <h3 className=\"mt-5\">Top Selling of Yesterday</h3>\r\n        <Bar data={barGraphData} options={barChartOptions} />\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function LineGraphs() {\r\n    const [lineGraphData, setLineGraphData] = useState({\r\n      dataLine: {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\r\n        datasets: [\r\n          {\r\n            label: \"My First dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(225, 204,230, .3)\",\r\n            borderColor: \"rgb(205, 130, 158)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(205, 130,1 58)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220,1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [65, 59, 80, 81, 56, 55, 40]\r\n          },\r\n          {\r\n            label: \"My Second dataset\",\r\n            fill: true,\r\n            lineTension: 0.3,\r\n            backgroundColor: \"rgba(184, 185, 210, .3)\",\r\n            borderColor: \"rgb(35, 26, 136)\",\r\n            borderCapStyle: \"butt\",\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: \"miter\",\r\n            pointBorderColor: \"rgb(35, 26, 136)\",\r\n            pointBackgroundColor: \"rgb(255, 255, 255)\",\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: \"rgb(0, 0, 0)\",\r\n            pointHoverBorderColor: \"rgba(220, 220, 220, 1)\",\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: [28, 48, 40, 19, 86, 27, 90]\r\n          }\r\n        ]\r\n      }\r\n    })\r\n\r\n  return (\r\n    <MDBContainer>\r\n    <h3 className=\"mt-5\">Line chart</h3>\r\n    <Line data={lineGraphData} options={{ responsive: true }} />\r\n  </MDBContainer>\r\n  );\r\n}\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\products\\AddProd.js",["226","227","228","229","230","231","232"],"import React, { useState, useEffect, useContext } from \"react\";\r\n\r\nimport { CategoryContext } from \"../../contexts/CategoryContext\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PostAddIcon from \"@material-ui/icons/PostAdd\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { ProductContext } from \"../../contexts/ProductContext\";\r\n\r\nfunction AddProd() {\r\n  const classes = useStyles();\r\n  const { sizes } = useContext(SizeContext);\r\n  const { categories } = useContext(CategoryContext);\r\n  const { addProduct } = useContext(ProductContext);\r\n\r\n  const sizeLookup = {};\r\n  const categoryLookup = {};\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [age, setAge] = React.useState(\"\");\r\n  const [productName, setProductName] = useState(\"\");\r\n  const [productCategory, setProductCategory] = useState(\"\");\r\n  const [productSize, setProductSize] = useState(\"\");\r\n  const [productPrice, setProductPrice] = useState(\"\");\r\n  // const [categoryOpt, setCategoryOpt] = useState(\"\");\r\n\r\n  const handleProductNameChange = (event) => {\r\n    setProductName(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductCategoryChange = (event) => {\r\n    setProductCategory(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductSizeChange = (event) => {\r\n    setProductSize(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  const handleProductPriceChange = (event) => {\r\n    setProductPrice(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n   const handleAddNow = async (event) => {\r\n     event.preventDefault();\r\n    let status = await addProduct({\r\n      product_name: productName,\r\n      product_price: productPrice,\r\n      size_id: productSize,\r\n      category_id: productCategory,\r\n    });\r\n\r\n    if (status != false) {\r\n        alert(status.error)\r\n    } else {\r\n    \r\n    }\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"small\"\r\n        className={classes.button}\r\n        startIcon={<PostAddIcon />}\r\n        onClick={handleOpen}\r\n      >\r\n        New Product\r\n      </Button>\r\n\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n            <form className={classes.form_prod} noValidate autoComplete=\"off\">\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"Product Name\"\r\n                variant=\"filled\"\r\n                value={productName}\r\n                onChange={handleProductNameChange}\r\n              />\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  value={productCategory}\r\n                  onChange={handleProductCategoryChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {categories.map((category) => (\r\n                    <MenuItem value={category.id}>\r\n                      <em>{category.name}</em>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl variant=\"filled\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-filled-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-filled-label\"\r\n                  id=\"demo-simple-select-filled\"\r\n                  value={productSize}\r\n                  onChange={handleProductSizeChange}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  {sizes.map((size) => (\r\n                    <MenuItem value={size.id}>\r\n                      <em>{size.name}</em>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                className={classes.textField}\r\n                id=\"filled-basic\"\r\n                label=\"\"\r\n                variant=\"filled\"\r\n                value={productPrice}\r\n                onChange={handleProductPriceChange}\r\n              />\r\n            </form>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"outlined\">Default</Button>\r\n                </div>\r\n                <div className=\"col-md-auto\">\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleAddNow} >\r\n                    Add Product\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    fontSize: \"medium\",\r\n  },\r\n  form_prod: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n  },\r\n  formControl: {\r\n    marginRight: \"5px\",\r\n    marginLeft: \"5px\",\r\n    marginTop: \"2px\",\r\n\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default AddProd;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\dashboard\\graphical-representations\\counter.js",["233","234","235","236","237","238","239","240"],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\home\\page_not_found.js",["241","242","243"],"import React from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom'\r\nimport notFoundImage from '../../resources/images/not_found.svg'\r\nimport './page_not_found.scss'\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Page_not_found() {\r\n    const classes = useStyles();\r\n    var history = useHistory();\r\n    \r\n    return (\r\n      <div className=\"container ForOForContainer\">\r\n        <div className=\"row\">\r\n          <img src={notFoundImage} className=\"notFound_img\" />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n          <div  className={classes.roots}>\r\n            <Button variant=\"contained\" className=\"fourOfour\" onClick={() => history.replace(\"/\")}>Go Back to  Login</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    roots: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default Page_not_found\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\pages\\sizes\\Sizes.js",["244","245","246","247"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { SizeContext } from \"../../contexts/SizeCotext\";\r\nimport MaterialTable from \"material-table\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { tableIcons, tablePageSizeoptions } from \"../../utils/utils\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport './Sizes.scss';\r\n\r\n\r\nfunction Sizes() {\r\n  const classes = useStyles();\r\n  const { sizes, sizeLoading, addSizes, updateSizes } = useContext(SizeContext);\r\n//   const [size, setsize] = useState(SizeContext);\r\n\r\nconst [openSuccess, setOpenSuccess] = React.useState(false);\r\nconst [columns, setColumns] = useState([\r\n  { title: \"ID\", field: \"id\", editable: \"never\" },\r\n  { title: \"Size \", field: \"name\" },\r\n  { title: \"Date Created\", field: \"created_at\", editable: \"never\" },\r\n]);\r\n\r\n  const handleSuccessClick = () => {\r\n    setOpenSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenSuccess(false);\r\n  };\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"size-container\">\r\n      <MaterialTable\r\n        isLoading={sizeLoading}\r\n        icons={tableIcons}\r\n        options={tablePageSizeoptions}\r\n        title=\"Categories to Choose from\"\r\n        columns={columns}\r\n        data={sizes}\r\n        editable={{\r\n          onRowAdd: (newData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              await addSizes({\r\n                name: newData.name,\r\n              });\r\n\r\n              resolve();\r\n            }),\r\n\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise(async (resolve, reject) => {\r\n              let status = await updateSizes(\r\n                {\r\n                  id: oldData.id,\r\n                  name: oldData.name,\r\n                },\r\n                {\r\n                  id: newData.id,\r\n                  name: newData.name,\r\n                }\r\n              );\r\n\r\n              if (status != false) {\r\n                window.location.reload(false);\r\n                handleSuccessClick();\r\n              } else {\r\n                \r\n              }\r\n\r\n              resolve();\r\n            }),\r\n        }}\r\n      />\r\n\r\n      <Snackbar\r\n      className=\"snackBar\"\r\n        open={openSuccess}\r\n        autoHideDuration={4000}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Update Success!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({}));\r\n\r\nexport default Sizes;\r\n","C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\contexts\\DashboardContext.js",[],"C:\\Users\\Paulskieee\\Desktop\\Portfolios\\CodePlayPH Projects\\sims\\sims-revised\\root-on-repo\\SIMS2\\src\\api\\dashboard.js",[],{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","severity":1,"message":"253","line":2,"column":8,"nodeType":"254","messageId":"255","endLine":2,"endColumn":27},{"ruleId":"252","severity":1,"message":"256","line":3,"column":8,"nodeType":"254","messageId":"255","endLine":3,"endColumn":31},{"ruleId":"252","severity":1,"message":"257","line":60,"column":11,"nodeType":"254","messageId":"255","endLine":60,"endColumn":26},{"ruleId":"252","severity":1,"message":"258","line":1,"column":39,"nodeType":"254","messageId":"255","endLine":1,"endColumn":48},{"ruleId":"252","severity":1,"message":"259","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":24},{"ruleId":"252","severity":1,"message":"260","line":8,"column":8,"nodeType":"254","messageId":"255","endLine":8,"endColumn":16},{"ruleId":"252","severity":1,"message":"261","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":11},{"ruleId":"252","severity":1,"message":"262","line":18,"column":8,"nodeType":"254","messageId":"255","endLine":18,"endColumn":16},{"ruleId":"252","severity":1,"message":"263","line":19,"column":8,"nodeType":"254","messageId":"255","endLine":19,"endColumn":22},{"ruleId":"252","severity":1,"message":"264","line":24,"column":10,"nodeType":"254","messageId":"255","endLine":24,"endColumn":21},{"ruleId":"252","severity":1,"message":"265","line":39,"column":10,"nodeType":"254","messageId":"255","endLine":39,"endColumn":14},{"ruleId":"252","severity":1,"message":"266","line":39,"column":16,"nodeType":"254","messageId":"255","endLine":39,"endColumn":23},{"ruleId":"252","severity":1,"message":"267","line":78,"column":29,"nodeType":"254","messageId":"255","endLine":78,"endColumn":48},{"ruleId":"268","severity":1,"message":"269","line":130,"column":17,"nodeType":"270","endLine":130,"endColumn":30},{"ruleId":"252","severity":1,"message":"259","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":24},{"ruleId":"252","severity":1,"message":"260","line":7,"column":8,"nodeType":"254","messageId":"255","endLine":7,"endColumn":16},{"ruleId":"252","severity":1,"message":"271","line":18,"column":10,"nodeType":"254","messageId":"255","endLine":18,"endColumn":15},{"ruleId":"252","severity":1,"message":"272","line":18,"column":17,"nodeType":"254","messageId":"255","endLine":18,"endColumn":23},{"ruleId":"252","severity":1,"message":"273","line":20,"column":8,"nodeType":"254","messageId":"255","endLine":20,"endColumn":15},{"ruleId":"252","severity":1,"message":"274","line":21,"column":8,"nodeType":"254","messageId":"255","endLine":21,"endColumn":16},{"ruleId":"252","severity":1,"message":"275","line":29,"column":10,"nodeType":"254","messageId":"255","endLine":29,"endColumn":17},{"ruleId":"276","severity":1,"message":"277","line":69,"column":14,"nodeType":"278","messageId":"279","endLine":69,"endColumn":16},{"ruleId":"280","severity":1,"message":"281","line":76,"column":6,"nodeType":"282","endLine":76,"endColumn":12,"suggestions":"283"},{"ruleId":"268","severity":1,"message":"269","line":106,"column":15,"nodeType":"270","endLine":106,"endColumn":65},{"ruleId":"252","severity":1,"message":"284","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":17},{"ruleId":"252","severity":1,"message":"285","line":23,"column":9,"nodeType":"254","messageId":"255","endLine":23,"endColumn":16},{"ruleId":"252","severity":1,"message":"286","line":24,"column":13,"nodeType":"254","messageId":"255","endLine":24,"endColumn":19},{"ruleId":"252","severity":1,"message":"287","line":24,"column":21,"nodeType":"254","messageId":"255","endLine":24,"endColumn":29},{"ruleId":"252","severity":1,"message":"288","line":26,"column":9,"nodeType":"254","messageId":"255","endLine":26,"endColumn":17},{"ruleId":"252","severity":1,"message":"289","line":28,"column":13,"nodeType":"254","messageId":"255","endLine":28,"endColumn":20},{"ruleId":"252","severity":1,"message":"290","line":28,"column":22,"nodeType":"254","messageId":"255","endLine":28,"endColumn":30},{"ruleId":"280","severity":1,"message":"291","line":40,"column":8,"nodeType":"282","endLine":40,"endColumn":10,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":44,"column":13,"nodeType":"295","endLine":44,"endColumn":31},{"ruleId":"252","severity":1,"message":"284","line":3,"column":10,"nodeType":"254","messageId":"255","endLine":3,"endColumn":17},{"ruleId":"252","severity":1,"message":"296","line":11,"column":8,"nodeType":"254","messageId":"255","endLine":11,"endColumn":18},{"ruleId":"252","severity":1,"message":"297","line":12,"column":8,"nodeType":"254","messageId":"255","endLine":12,"endColumn":15},{"ruleId":"252","severity":1,"message":"298","line":23,"column":10,"nodeType":"254","messageId":"255","endLine":23,"endColumn":14},{"ruleId":"252","severity":1,"message":"299","line":23,"column":16,"nodeType":"254","messageId":"255","endLine":23,"endColumn":23},{"ruleId":"252","severity":1,"message":"300","line":24,"column":10,"nodeType":"254","messageId":"255","endLine":24,"endColumn":21},{"ruleId":"252","severity":1,"message":"301","line":24,"column":23,"nodeType":"254","messageId":"255","endLine":24,"endColumn":37},{"ruleId":"252","severity":1,"message":"302","line":25,"column":10,"nodeType":"254","messageId":"255","endLine":25,"endColumn":25},{"ruleId":"252","severity":1,"message":"303","line":25,"column":27,"nodeType":"254","messageId":"255","endLine":25,"endColumn":45},{"ruleId":"252","severity":1,"message":"304","line":26,"column":10,"nodeType":"254","messageId":"255","endLine":26,"endColumn":21},{"ruleId":"252","severity":1,"message":"305","line":26,"column":23,"nodeType":"254","messageId":"255","endLine":26,"endColumn":37},{"ruleId":"252","severity":1,"message":"306","line":27,"column":10,"nodeType":"254","messageId":"255","endLine":27,"endColumn":22},{"ruleId":"252","severity":1,"message":"307","line":27,"column":24,"nodeType":"254","messageId":"255","endLine":27,"endColumn":39},{"ruleId":"308","severity":1,"message":"309","line":30,"column":22,"nodeType":"310","messageId":"311","endLine":30,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":34,"column":31,"nodeType":"310","messageId":"311","endLine":34,"endColumn":33},{"ruleId":"280","severity":1,"message":"312","line":37,"column":6,"nodeType":"313","endLine":37,"endColumn":8},{"ruleId":"280","severity":1,"message":"314","line":37,"column":6,"nodeType":"313","endLine":37,"endColumn":8,"suggestions":"315"},{"ruleId":"252","severity":1,"message":"316","line":39,"column":19,"nodeType":"254","messageId":"255","endLine":39,"endColumn":29},{"ruleId":"252","severity":1,"message":"317","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":15},{"ruleId":"252","severity":1,"message":"318","line":15,"column":8,"nodeType":"254","messageId":"255","endLine":15,"endColumn":16},{"ruleId":"252","severity":1,"message":"319","line":23,"column":8,"nodeType":"254","messageId":"255","endLine":23,"endColumn":16},{"ruleId":"252","severity":1,"message":"320","line":32,"column":8,"nodeType":"254","messageId":"255","endLine":32,"endColumn":18},{"ruleId":"252","severity":1,"message":"321","line":33,"column":8,"nodeType":"254","messageId":"255","endLine":33,"endColumn":16},{"ruleId":"252","severity":1,"message":"322","line":36,"column":8,"nodeType":"254","messageId":"255","endLine":36,"endColumn":18},{"ruleId":"252","severity":1,"message":"323","line":37,"column":8,"nodeType":"254","messageId":"255","endLine":37,"endColumn":17},{"ruleId":"252","severity":1,"message":"324","line":40,"column":10,"nodeType":"254","messageId":"255","endLine":40,"endColumn":20},{"ruleId":"280","severity":1,"message":"325","line":78,"column":6,"nodeType":"282","endLine":78,"endColumn":8,"suggestions":"326"},{"ruleId":"276","severity":1,"message":"277","line":130,"column":24,"nodeType":"278","messageId":"279","endLine":130,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":132,"column":37,"nodeType":"278","messageId":"279","endLine":132,"endColumn":39},{"ruleId":"252","severity":1,"message":"258","line":1,"column":29,"nodeType":"254","messageId":"255","endLine":1,"endColumn":38},{"ruleId":"252","severity":1,"message":"327","line":1,"column":40,"nodeType":"254","messageId":"255","endLine":1,"endColumn":48},{"ruleId":"252","severity":1,"message":"328","line":3,"column":28,"nodeType":"254","messageId":"255","endLine":3,"endColumn":42},{"ruleId":"252","severity":1,"message":"329","line":10,"column":24,"nodeType":"254","messageId":"255","endLine":10,"endColumn":39},{"ruleId":"252","severity":1,"message":"330","line":10,"column":41,"nodeType":"254","messageId":"255","endLine":10,"endColumn":54},{"ruleId":"252","severity":1,"message":"258","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"331","line":6,"column":10,"nodeType":"254","messageId":"255","endLine":6,"endColumn":24},{"ruleId":"252","severity":1,"message":"332","line":11,"column":9,"nodeType":"254","messageId":"255","endLine":11,"endColumn":16},{"ruleId":"252","severity":1,"message":"333","line":12,"column":11,"nodeType":"254","messageId":"255","endLine":12,"endColumn":16},{"ruleId":"252","severity":1,"message":"334","line":15,"column":9,"nodeType":"254","messageId":"255","endLine":15,"endColumn":23},{"ruleId":"252","severity":1,"message":"335","line":17,"column":10,"nodeType":"254","messageId":"255","endLine":17,"endColumn":18},{"ruleId":"252","severity":1,"message":"316","line":19,"column":19,"nodeType":"254","messageId":"255","endLine":19,"endColumn":29},{"ruleId":"276","severity":1,"message":"336","line":42,"column":26,"nodeType":"278","messageId":"279","endLine":42,"endColumn":28},{"ruleId":"276","severity":1,"message":"336","line":62,"column":25,"nodeType":"278","messageId":"279","endLine":62,"endColumn":27},{"ruleId":"252","severity":1,"message":"337","line":44,"column":11,"nodeType":"254","messageId":"255","endLine":44,"endColumn":26},{"ruleId":"252","severity":1,"message":"338","line":45,"column":11,"nodeType":"254","messageId":"255","endLine":45,"endColumn":21},{"ruleId":"252","severity":1,"message":"339","line":46,"column":11,"nodeType":"254","messageId":"255","endLine":46,"endColumn":24},{"ruleId":"252","severity":1,"message":"340","line":70,"column":9,"nodeType":"254","messageId":"255","endLine":70,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":81,"column":22,"nodeType":"310","messageId":"311","endLine":81,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":85,"column":31,"nodeType":"310","messageId":"311","endLine":85,"endColumn":33},{"ruleId":"280","severity":1,"message":"314","line":88,"column":6,"nodeType":"282","endLine":88,"endColumn":8,"suggestions":"341"},{"ruleId":"252","severity":1,"message":"316","line":90,"column":19,"nodeType":"254","messageId":"255","endLine":90,"endColumn":29},{"ruleId":"252","severity":1,"message":"339","line":12,"column":11,"nodeType":"254","messageId":"255","endLine":12,"endColumn":24},{"ruleId":"252","severity":1,"message":"342","line":13,"column":21,"nodeType":"254","messageId":"255","endLine":13,"endColumn":36},{"ruleId":"308","severity":1,"message":"309","line":18,"column":28,"nodeType":"310","messageId":"311","endLine":18,"endColumn":30},{"ruleId":"252","severity":1,"message":"343","line":23,"column":24,"nodeType":"254","messageId":"255","endLine":23,"endColumn":39},{"ruleId":"252","severity":1,"message":"344","line":52,"column":27,"nodeType":"254","messageId":"255","endLine":52,"endColumn":45},{"ruleId":"252","severity":1,"message":"345","line":90,"column":27,"nodeType":"254","messageId":"255","endLine":90,"endColumn":43},{"ruleId":"252","severity":1,"message":"258","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"263","line":16,"column":8,"nodeType":"254","messageId":"255","endLine":16,"endColumn":22},{"ruleId":"252","severity":1,"message":"346","line":26,"column":9,"nodeType":"254","messageId":"255","endLine":26,"endColumn":19},{"ruleId":"252","severity":1,"message":"334","line":27,"column":9,"nodeType":"254","messageId":"255","endLine":27,"endColumn":23},{"ruleId":"252","severity":1,"message":"347","line":30,"column":10,"nodeType":"254","messageId":"255","endLine":30,"endColumn":13},{"ruleId":"252","severity":1,"message":"348","line":30,"column":15,"nodeType":"254","messageId":"255","endLine":30,"endColumn":21},{"ruleId":"276","severity":1,"message":"336","line":66,"column":16,"nodeType":"278","messageId":"279","endLine":66,"endColumn":18},{"ruleId":"252","severity":1,"message":"258","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"349","line":4,"column":8,"nodeType":"254","messageId":"255","endLine":4,"endColumn":23},{"ruleId":"252","severity":1,"message":"350","line":5,"column":8,"nodeType":"254","messageId":"255","endLine":5,"endColumn":26},{"ruleId":"252","severity":1,"message":"351","line":6,"column":8,"nodeType":"254","messageId":"255","endLine":6,"endColumn":18},{"ruleId":"252","severity":1,"message":"352","line":15,"column":8,"nodeType":"254","messageId":"255","endLine":15,"endColumn":14},{"ruleId":"252","severity":1,"message":"353","line":21,"column":9,"nodeType":"254","messageId":"255","endLine":21,"endColumn":22},{"ruleId":"252","severity":1,"message":"346","line":22,"column":9,"nodeType":"254","messageId":"255","endLine":22,"endColumn":19},{"ruleId":"252","severity":1,"message":"354","line":28,"column":9,"nodeType":"254","messageId":"255","endLine":28,"endColumn":21},{"ruleId":"252","severity":1,"message":"271","line":2,"column":10,"nodeType":"254","messageId":"255","endLine":2,"endColumn":15},{"ruleId":"252","severity":1,"message":"272","line":2,"column":17,"nodeType":"254","messageId":"255","endLine":2,"endColumn":23},{"ruleId":"355","severity":1,"message":"356","line":15,"column":11,"nodeType":"295","endLine":15,"endColumn":63},{"ruleId":"252","severity":1,"message":"258","line":1,"column":27,"nodeType":"254","messageId":"255","endLine":1,"endColumn":36},{"ruleId":"252","severity":1,"message":"332","line":12,"column":9,"nodeType":"254","messageId":"255","endLine":12,"endColumn":16},{"ruleId":"252","severity":1,"message":"316","line":17,"column":17,"nodeType":"254","messageId":"255","endLine":17,"endColumn":27},{"ruleId":"276","severity":1,"message":"336","line":71,"column":26,"nodeType":"278","messageId":"279","endLine":71,"endColumn":28},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'AuthContextProvider' is defined but never used.","Identifier","unusedVar","'CategoryContextProvider' is defined but never used.","'addCategoryData' is assigned a value but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'MenuItem' is defined but never used.","'FormHelperText' is defined but never used.","'BorderColor' is defined but never used.","'Dept' is assigned a value but never used.","'setDept' is assigned a value but never used.","'setAccountTypeState' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Route' is defined but never used.","'Switch' is defined but never used.","'FishPic' is defined but never used.","'Register' is defined but never used.","'laoding' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'setUserData'. Either include them or remove the dependency array.","ArrayExpression",["359"],"'headers' is defined but never used.","'history' is assigned a value but never used.","'window' is assigned a value but never used.","'location' is assigned a value but never used.","'prevData' is defined but never used.","'isLogin' is assigned a value but never used.","'setLogin' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchCategories', 'fetchProducts', 'fetchSizes', and 'fetchTopEntries'. Either include them or remove the dependency array.",["360"],"react/jsx-pascal-case","Imported JSX component Page_not_found must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Categories' is defined but never used.","'AddProd' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'productName' is assigned a value but never used.","'setProductName' is assigned a value but never used.","'productCategory' is assigned a value but never used.","'setProductCategory' is assigned a value but never used.","'productSize' is assigned a value but never used.","'setProductSize' is assigned a value but never used.","'productPrice' is assigned a value but never used.","'setProductPrice' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","ObjectExpression","React Hook useEffect has missing dependencies: 'categories', 'categoryLookup', 'sizeLookup', and 'sizes'. Either include them or remove the dependency array.",["361"],"'setColumns' is assigned a value but never used.","'Divider' is defined but never used.","'MailIcon' is defined but never used.","'ListIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'SendIcon' is defined but never used.","'StarBorder' is defined but never used.","'CPPH_Logo' is defined but never used.","'HoverState' is defined but never used.","React Hook useEffect has a missing dependency: 'props.pathName'. Either include it or remove the dependency array.",["362"],"'useState' is defined but never used.","'LinearProgress' is defined but never used.","'fetchTopEntries' is assigned a value but never used.","'dashboardData' is assigned a value but never used.","'ProductContext' is defined but never used.","'classes' is assigned a value but never used.","'sizes' is assigned a value but never used.","'categoryLookup' is assigned a value but never used.","'category' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'fetchCategories' is assigned a value but never used.","'fetchSizes' is assigned a value but never used.","'fetchProducts' is assigned a value but never used.","'handleAddNow' is assigned a value but never used.",["363"],"'productsLoading' is assigned a value but never used.","'setBarGraphData' is assigned a value but never used.","'setBarChartOptions' is assigned a value but never used.","'setLineGraphData' is assigned a value but never used.","'sizeLookup' is assigned a value but never used.","'age' is assigned a value but never used.","'setAge' is assigned a value but never used.","'LocalDiningIcon' is defined but never used.","'DirectionsWalkIcon' is defined but never used.","'AcUnitIcon' is defined but never used.","'Button' is defined but never used.","'categoryCount' is assigned a value but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"368","fix":"372"},"Update the dependencies array to be: [code, history, setUserData]",{"range":"373","text":"374"},"Update the dependencies array to be: [fetchCategories, fetchProducts, fetchSizes, fetchTopEntries]",{"range":"375","text":"376"},"Update the dependencies array to be: [categories, categoryLookup, sizeLookup, sizes]",{"range":"377","text":"378"},"Update the dependencies array to be: [props.pathName]",{"range":"379","text":"380"},{"range":"381","text":"378"},[2253,2259],"[code, history, setUserData]",[1474,1476],"[fetchCategories, fetchProducts, fetchSizes, fetchTopEntries]",[1311,1313],"[categories, categoryLookup, sizeLookup, sizes]",[3084,3086],"[props.pathName]",[2744,2746]]